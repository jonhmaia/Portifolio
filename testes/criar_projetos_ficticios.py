#!/usr/bin/env python
import os
import sys
import django

# Configurar Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'meu_portfolio.settings')
django.setup()

from portfolio.models import Projeto, Tecnologia
from django.utils import timezone

def criar_tecnologias_basicas():
    """Cria tecnologias b√°sicas se n√£o existirem"""
    tecnologias = [
        {'nome': 'Python', 'icone': 'fab fa-python', 'cor': '#3776ab', 'categoria': 'linguagem'},
        {'nome': 'JavaScript', 'icone': 'fab fa-js-square', 'cor': '#f7df1e', 'categoria': 'linguagem'},
        {'nome': 'React', 'icone': 'fab fa-react', 'cor': '#61dafb', 'categoria': 'framework'},
        {'nome': 'Django', 'icone': 'fas fa-server', 'cor': '#092e20', 'categoria': 'framework'},
        {'nome': 'Node.js', 'icone': 'fab fa-node-js', 'cor': '#339933', 'categoria': 'framework'},
        {'nome': 'PostgreSQL', 'icone': 'fas fa-database', 'cor': '#336791', 'categoria': 'banco'},
        {'nome': 'MongoDB', 'icone': 'fas fa-leaf', 'cor': '#47a248', 'categoria': 'banco'},
        {'nome': 'HTML/CSS', 'icone': 'fab fa-html5', 'cor': '#e34f26', 'categoria': 'linguagem'},
        {'nome': 'Vue.js', 'icone': 'fab fa-vuejs', 'cor': '#4fc08d', 'categoria': 'framework'},
        {'nome': 'Express.js', 'icone': 'fas fa-server', 'cor': '#000000', 'categoria': 'framework'},
        {'nome': 'TypeScript', 'icone': 'fas fa-code', 'cor': '#3178c6', 'categoria': 'linguagem'},
        {'nome': 'Docker', 'icone': 'fab fa-docker', 'cor': '#2496ed', 'categoria': 'ferramenta'},
        {'nome': 'AWS', 'icone': 'fab fa-aws', 'cor': '#ff9900', 'categoria': 'ferramenta'},
        {'nome': 'Git', 'icone': 'fab fa-git-alt', 'cor': '#f05032', 'categoria': 'ferramenta'},
        {'nome': 'Redis', 'icone': 'fas fa-database', 'cor': '#dc382d', 'categoria': 'banco'},
    ]
    
    for tech_data in tecnologias:
        tech, created = Tecnologia.objects.get_or_create(
            nome=tech_data['nome'],
            defaults=tech_data
        )
        if created:
            print(f"‚úì Tecnologia criada: {tech.nome}")

def criar_projetos_ficticios():
    """Cria 10 projetos fict√≠cios"""
    
    # Buscar tecnologias
    python = Tecnologia.objects.get(nome='Python')
    javascript = Tecnologia.objects.get(nome='JavaScript')
    react = Tecnologia.objects.get(nome='React')
    django = Tecnologia.objects.get(nome='Django')
    nodejs = Tecnologia.objects.get(nome='Node.js')
    postgresql = Tecnologia.objects.get(nome='PostgreSQL')
    mongodb = Tecnologia.objects.get(nome='MongoDB')
    html_css = Tecnologia.objects.get(nome='HTML/CSS')
    vue = Tecnologia.objects.get(nome='Vue.js')
    express = Tecnologia.objects.get(nome='Express.js')
    typescript = Tecnologia.objects.get(nome='TypeScript')
    docker = Tecnologia.objects.get(nome='Docker')
    aws = Tecnologia.objects.get(nome='AWS')
    git = Tecnologia.objects.get(nome='Git')
    redis = Tecnologia.objects.get(nome='Redis')
    
    projetos_data = [
        # PROJETOS EM DESTAQUE (5)
        {
            'titulo': 'Sistema de Gest√£o Empresarial',
            'subtitulo': 'ERP completo para pequenas e m√©dias empresas',
            'descricao_curta': 'Sistema completo de gest√£o empresarial com m√≥dulos de vendas, estoque, financeiro e relat√≥rios avan√ßados.',
            'descricao_completa': '''Sistema ERP desenvolvido para atender pequenas e m√©dias empresas, oferecendo uma solu√ß√£o completa para gest√£o de neg√≥cios.

## üöÄ Funcionalidades Principais
- Gest√£o de vendas e clientes
- Controle de estoque em tempo real
- M√≥dulo financeiro completo
- Relat√≥rios e dashboards interativos
- Sistema de usu√°rios e permiss√µes
- API REST para integra√ß√µes

## üõ†Ô∏è Tecnologias
- Backend: Django + Django REST Framework
- Frontend: React + TypeScript
- Banco de dados: PostgreSQL
- Cache: Redis
- Deploy: Docker + AWS

## üìä Resultados
- Redu√ß√£o de 40% no tempo de processos administrativos
- Melhoria de 60% na precis√£o do controle de estoque
- Interface intuitiva com alta satisfa√ß√£o dos usu√°rios''',
            'tecnologias': [django, python, react, typescript, postgresql, redis, docker, aws],
            'link_repositorio': 'https://github.com/usuario/sistema-gestao-empresarial',
            'link_deploy': 'https://gestao-demo.herokuapp.com',
            'destaque': True,
            'ordem': 1,
            'status': 'concluido'
        },
        {
            'titulo': 'Plataforma de E-learning',
            'subtitulo': 'Ambiente virtual de aprendizagem moderno',
            'descricao_curta': 'Plataforma completa de ensino online com videoaulas, exerc√≠cios interativos, f√≥runs e sistema de avalia√ß√£o.',
            'descricao_completa': '''Plataforma de e-learning desenvolvida para institui√ß√µes de ensino e empresas que desejam oferecer treinamentos online.

## üéì Recursos Educacionais
- Videoaulas com player customizado
- Exerc√≠cios interativos e quizzes
- F√≥runs de discuss√£o por disciplina
- Sistema de notas e certificados
- Gamifica√ß√£o com pontos e badges
- Relat√≥rios de progresso detalhados

## üíª Tecnologias Utilizadas
- Frontend: Vue.js + Nuxt.js
- Backend: Node.js + Express
- Banco: MongoDB
- Streaming: AWS CloudFront
- Autentica√ß√£o: JWT

## üìà Impacto
- Mais de 5.000 alunos ativos
- Taxa de conclus√£o de cursos: 85%
- Avalia√ß√£o m√©dia: 4.8/5 estrelas''',
            'tecnologias': [vue, nodejs, express, mongodb, javascript, aws, docker],
            'link_repositorio': 'https://github.com/usuario/plataforma-elearning',
            'link_deploy': 'https://elearning-demo.vercel.app',
            'destaque': True,
            'ordem': 2,
            'status': 'concluido'
        },
        {
            'titulo': 'App de Delivery Inteligente',
            'subtitulo': 'Aplicativo de entrega com IA para otimiza√ß√£o de rotas',
            'descricao_curta': 'Aplicativo mobile de delivery com intelig√™ncia artificial para otimiza√ß√£o de rotas e previs√£o de demanda.',
            'descricao_completa': '''Aplicativo revolucion√°rio de delivery que utiliza intelig√™ncia artificial para otimizar entregas e melhorar a experi√™ncia do usu√°rio.

## ü§ñ Intelig√™ncia Artificial
- Algoritmo de otimiza√ß√£o de rotas em tempo real
- Previs√£o de demanda por regi√£o e hor√°rio
- Recomenda√ß√µes personalizadas para usu√°rios
- An√°lise preditiva de tempo de entrega
- Chatbot para atendimento automatizado

## üì± Funcionalidades
- Interface intuitiva e responsiva
- Rastreamento em tempo real
- M√∫ltiplas formas de pagamento
- Sistema de avalia√ß√µes
- Programa de fidelidade
- Notifica√ß√µes push inteligentes

## ‚ö° Performance
- Redu√ß√£o de 30% no tempo m√©dio de entrega
- Aumento de 45% na satisfa√ß√£o do cliente
- Economia de 25% em combust√≠vel para entregadores''',
            'tecnologias': [react, nodejs, mongodb, python, docker, aws, git],
            'link_repositorio': 'https://github.com/usuario/delivery-inteligente',
            'link_deploy': 'https://delivery-app-demo.netlify.app',
            'destaque': True,
            'ordem': 3,
            'status': 'concluido'
        },
        {
            'titulo': 'Dashboard Analytics Avan√ßado',
            'subtitulo': 'Painel de controle com visualiza√ß√µes interativas',
            'descricao_curta': 'Dashboard completo para an√°lise de dados empresariais com gr√°ficos interativos e relat√≥rios em tempo real.',
            'descricao_completa': '''Dashboard profissional para an√°lise de dados empresariais, oferecendo insights valiosos atrav√©s de visualiza√ß√µes interativas e relat√≥rios automatizados.

## üìä Visualiza√ß√µes
- Gr√°ficos interativos com D3.js
- Mapas de calor e geolocaliza√ß√£o
- M√©tricas em tempo real
- Comparativos hist√≥ricos
- Filtros din√¢micos avan√ßados
- Exporta√ß√£o para PDF/Excel

## üîß Funcionalidades T√©cnicas
- Processamento de big data
- APIs RESTful para integra√ß√£o
- Cache inteligente para performance
- Responsivo para todos os dispositivos
- Temas claro e escuro
- Alertas autom√°ticos por email

## üéØ Benef√≠cios
- Tomada de decis√£o baseada em dados
- Identifica√ß√£o de tend√™ncias e padr√µes
- Monitoramento de KPIs em tempo real
- Redu√ß√£o de 50% no tempo de an√°lise''',
            'tecnologias': [react, typescript, nodejs, postgresql, redis, docker],
            'link_repositorio': 'https://github.com/usuario/dashboard-analytics',
            'link_deploy': 'https://analytics-dashboard-demo.vercel.app',
            'destaque': True,
            'ordem': 4,
            'status': 'concluido'
        },
        {
            'titulo': 'API de Microservi√ßos Financeiros',
            'subtitulo': 'Arquitetura de microservi√ßos para fintech',
            'descricao_curta': 'API robusta em microservi√ßos para opera√ß√µes financeiras com alta disponibilidade e seguran√ßa banc√°ria.',
            'descricao_completa': '''API de microservi√ßos desenvolvida para opera√ß√µes financeiras, seguindo os mais altos padr√µes de seguran√ßa e disponibilidade do setor banc√°rio.

## üè¶ Servi√ßos Financeiros
- Processamento de pagamentos
- Transfer√™ncias entre contas
- Gest√£o de cart√µes de cr√©dito
- An√°lise de cr√©dito automatizada
- Compliance e auditoria
- Preven√ß√£o √† fraude com ML

## üîí Seguran√ßa
- Criptografia end-to-end
- Autentica√ß√£o multifator
- Tokens JWT com refresh
- Rate limiting avan√ßado
- Logs de auditoria completos
- Certifica√ß√£o PCI DSS

## ‚ö° Performance
- 99.9% de uptime
- Lat√™ncia m√©dia < 100ms
- Processamento de 10k+ transa√ß√µes/segundo
- Auto-scaling baseado em demanda
- Monitoramento 24/7''',
            'tecnologias': [nodejs, typescript, postgresql, redis, docker, aws],
            'link_repositorio': 'https://github.com/usuario/microservicos-financeiros',
            'link_deploy': 'https://api-financeira-docs.herokuapp.com',
            'destaque': True,
            'ordem': 5,
            'status': 'concluido'
        },
        
        # PROJETOS SEM DESTAQUE (5)
        {
            'titulo': 'Blog Pessoal com CMS',
            'subtitulo': 'Sistema de blog com painel administrativo',
            'descricao_curta': 'Blog pessoal desenvolvido com sistema de gerenciamento de conte√∫do, coment√°rios e SEO otimizado.',
            'descricao_completa': '''Blog pessoal completo com sistema de gerenciamento de conte√∫do pr√≥prio, focado em performance e SEO.

## ‚úçÔ∏è Funcionalidades
- Editor de texto rico (WYSIWYG)
- Sistema de categorias e tags
- Coment√°rios com modera√ß√£o
- Newsletter integrada
- Busca avan√ßada
- Sitemap autom√°tico

## üöÄ Otimiza√ß√µes
- SEO on-page completo
- Lazy loading de imagens
- Compress√£o autom√°tica
- Cache de p√°ginas
- PWA (Progressive Web App)
- Core Web Vitals otimizados''',
            'tecnologias': [django, python, html_css, javascript, postgresql],
            'link_repositorio': 'https://github.com/usuario/blog-cms',
            'link_deploy': 'https://meu-blog-demo.herokuapp.com',
            'destaque': False,
            'ordem': 6,
            'status': 'concluido'
        },
        {
            'titulo': 'Calculadora de Investimentos',
            'subtitulo': 'Ferramenta para simula√ß√£o de investimentos',
            'descricao_curta': 'Aplica√ß√£o web para c√°lculo e simula√ß√£o de diferentes tipos de investimentos com gr√°ficos comparativos.',
            'descricao_completa': '''Ferramenta completa para simula√ß√£o e compara√ß√£o de investimentos, ajudando usu√°rios a tomar decis√µes financeiras informadas.

## üí∞ Tipos de Investimento
- Poupan√ßa e CDB
- Tesouro Direto
- Fundos de investimento
- A√ß√µes e dividendos
- Criptomoedas
- Investimentos internacionais

## üìà Recursos
- Simula√ß√µes com juros compostos
- Compara√ß√£o entre investimentos
- Gr√°ficos interativos
- Hist√≥rico de rentabilidade
- Calculadora de IR
- Alertas de vencimento''',
            'tecnologias': [react, javascript, html_css, nodejs],
            'link_repositorio': 'https://github.com/usuario/calculadora-investimentos',
            'link_deploy': 'https://calc-investimentos.netlify.app',
            'destaque': False,
            'ordem': 7,
            'status': 'concluido'
        },
        {
            'titulo': 'Sistema de Biblioteca Digital',
            'subtitulo': 'Gerenciamento de acervo e empr√©stimos',
            'descricao_curta': 'Sistema completo para gest√£o de biblioteca com controle de acervo, empr√©stimos e reservas online.',
            'descricao_completa': '''Sistema de gest√£o bibliotec√°ria moderno, digitalizando processos e melhorando a experi√™ncia dos usu√°rios.

## üìö Gest√£o de Acervo
- Cataloga√ß√£o autom√°tica
- Busca avan√ßada por m√∫ltiplos crit√©rios
- Controle de exemplares
- Hist√≥rico de movimenta√ß√£o
- Relat√≥rios de popularidade
- Integra√ß√£o com APIs de livros

## üë• Funcionalidades do Usu√°rio
- Reservas online
- Renova√ß√£o autom√°tica
- Hist√≥rico de empr√©stimos
- Lista de desejos
- Recomenda√ß√µes personalizadas
- Notifica√ß√µes por email/SMS''',
            'tecnologias': [django, python, postgresql, html_css, javascript],
            'link_repositorio': 'https://github.com/usuario/biblioteca-digital',
            'link_deploy': 'https://biblioteca-demo.railway.app',
            'destaque': False,
            'ordem': 8,
            'status': 'desenvolvimento'
        },
        {
            'titulo': 'App de Controle de Gastos',
            'subtitulo': 'Gerenciador financeiro pessoal',
            'descricao_curta': 'Aplicativo para controle de gastos pessoais com categoriza√ß√£o autom√°tica e relat√≥rios detalhados.',
            'descricao_completa': '''Aplicativo de controle financeiro pessoal que ajuda usu√°rios a organizarem suas finan√ßas e atingirem seus objetivos.

## üí≥ Controle Financeiro
- Categoriza√ß√£o autom√°tica de gastos
- Metas de economia
- Alertas de or√ßamento
- Sincroniza√ß√£o banc√°ria
- M√∫ltiplas contas e cart√µes
- Planejamento de aposentadoria

## üìä Relat√≥rios
- Gr√°ficos de gastos por categoria
- Comparativos mensais
- Proje√ß√µes futuras
- An√°lise de padr√µes
- Exporta√ß√£o de dados
- Backup autom√°tico''',
            'tecnologias': [react, nodejs, mongodb, javascript],
            'link_repositorio': 'https://github.com/usuario/controle-gastos',
            'link_deploy': 'https://gastos-app.vercel.app',
            'destaque': False,
            'ordem': 9,
            'status': 'concluido'
        },
        {
            'titulo': 'Portal de Not√≠cias Tech',
            'subtitulo': 'Agregador de not√≠cias de tecnologia',
            'descricao_curta': 'Portal de not√≠cias focado em tecnologia com sistema de curadoria autom√°tica e personaliza√ß√£o de conte√∫do.',
            'descricao_completa': '''Portal de not√≠cias especializado em tecnologia, oferecendo conte√∫do curado e personalizado para profissionais da √°rea.

## üì∞ Curadoria de Conte√∫do
- Agrega√ß√£o autom√°tica de fontes
- Classifica√ß√£o por relev√¢ncia
- Detec√ß√£o de trending topics
- Filtros por tecnologia
- Sistema de tags inteligente
- Preven√ß√£o de fake news

## üéØ Personaliza√ß√£o
- Feed personalizado por interesse
- Notifica√ß√µes push seletivas
- Bookmarks e listas de leitura
- Compartilhamento social
- Coment√°rios da comunidade
- Newsletter semanal''',
            'tecnologias': [vue, nodejs, mongodb, javascript, docker],
            'link_repositorio': 'https://github.com/usuario/portal-noticias-tech',
            'link_deploy': 'https://tech-news-portal.netlify.app',
            'destaque': False,
            'ordem': 10,
            'status': 'desenvolvimento'
        }
    ]
    
    created_count = 0
    
    for projeto_data in projetos_data:
        # Verificar se o projeto j√° existe
        if not Projeto.objects.filter(titulo=projeto_data['titulo']).exists():
            # Extrair tecnologias
            tecnologias = projeto_data.pop('tecnologias')
            
            # Criar o projeto
            projeto = Projeto.objects.create(**projeto_data)
            
            # Adicionar tecnologias
            projeto.tecnologias.set(tecnologias)
            
            created_count += 1
            status_icon = "‚≠ê" if projeto.destaque else "üìÅ"
            print(f'{status_icon} Projeto criado: {projeto.titulo}')
        else:
            print(f'‚ö†Ô∏è  Projeto j√° existe: {projeto_data["titulo"]}')
    
    print(f'\nüéâ Processo conclu√≠do!')
    print(f'üì¶ {created_count} projetos criados')
    print(f'‚≠ê 5 projetos em destaque')
    print(f'üìÅ 5 projetos regulares')
    print(f'üîó Acesse: http://127.0.0.1:8000/portfolio/projects/')

if __name__ == '__main__':
    print('üöÄ Criando projetos fict√≠cios...')
    print('\n=== CRIANDO TECNOLOGIAS B√ÅSICAS ===')
    criar_tecnologias_basicas()
    
    print('\n=== CRIANDO PROJETOS FICT√çCIOS ===')
    criar_projetos_ficticios()
    
    print('\n‚úÖ Script executado com sucesso!')